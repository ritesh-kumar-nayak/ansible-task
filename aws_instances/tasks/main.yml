- name: Ubuntu_instance
  ec2:
    region: "{{ region }}"
    key_name: "{{ key_pair }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami_ubuntu }}"
    group_id: "{{ security_group }}"
    vpc_subnet_id: "{{subnet}}" 
    count: 1
    wait: true
    assign_public_ip: true
  register: ubuntu_inst
  ignore_errors: true

- name: debugging
  debug:
    var: ubuntu_inst

- name: Add Ubuntu Instance to Host Group
  add_host:
    name: "{{ item.instances[0].public_ip }}"
    groups: ubuntu_instances
  with_items: "{{ ubuntu_inst.tagged_instances }}"
  when: ubuntu_inst.changed

- name: Wait for SSH to be available on Ubuntu Instance
  wait_for:
    host: "{{ item.instances[0].public_ip }}"
    port: 22 #opening the SSH port for the server
    timeout: 300
  with_items: "{{ ubuntu_inst.tagged_instances }}"
  when: ubuntu_inst.changed

- name: Create user
  become: true
  user:
      name: John
      state: present

# Nginx service installation

- name: Install nginx
  apt:
    name: nginx
    state: present
    update_cache: yes
    cache_valid_time: 86400
  notify: 
    - start nginx
    - Restart Nginx

# Generating SSH keys for authentication

- name: Generate SSH key pair using ssh-keygen
  command: ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -N ""

# Copying ssh public key to managed instance location 
- name: Copy SSH public key to Ubuntu instance
  authorized_key:
        user: ubuntu  
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present
  


# trying for Windows instance

- name: Launch Windows Instance
  ec2:
    region: "{{ region }}"
    key_name: "{{ key_pair }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami_windows }}"
    group_id: "{{ security_group }}"
    vpc_subnet_id: "{{subnet}}"
    count: 1
    wait: true
    assign_public_ip: true
  register: windows_inst

- name: debugging windows
  debug:
    var: windows_inst
  

# Create Directories and Set Permissions on Windows

- name: Create directories
  win_file:
      path: C:\Remote
      state: directory

- name: Set ownership
  win_owner:
    path: C:\Remote
    owner: Administrator
    recurse: yes

- name: Set permissions
  win_acl:
    path: C:\Remote
    user: Administrator
    rights: full_control
    type: allow
    state: present

# Creating user

- name: Create a user
  win_user:
    name: UserRitesh
    password: Ritesh123
    state: present

# Creating Group
- name: Create a group
  win_group:
    name: developers
    state: present

# Adding user to group    
- name: Add user to a group
  win_group_membership:
    name: UserRitesh
    groups: developers
    state: present